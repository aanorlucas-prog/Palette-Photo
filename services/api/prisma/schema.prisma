// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  phone     String?
  address   String?
  bio       String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  clients   Client[]
  quotes    Quote[]
  invoices  Invoice[]
}

model Client {
  id        Int       @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  address   String?
  createdAt DateTime  @default(now())

  // Relations
  user      User      @relation(fields: [userId], references: [id])
  userId    Int

  quotes    Quote[]
  invoices  Invoice[]
}

model Quote {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  amount      Float
  status      String    @default("pending") // e.g., pending | approved | rejected
  createdAt   DateTime  @default(now())

  // Relations
  user        User      @relation(fields: [userId], references: [id])
  userId      Int

  client      Client?   @relation(fields: [clientId], references: [id])
  clientId    Int?
}

model Invoice {
  id          Int       @id @default(autoincrement())
  number      String    @unique
  amount      Float
  issuedAt    DateTime  @default(now())
  dueDate     DateTime?
  status      String    @default("unpaid") // e.g., unpaid | paid | canceled

  // Relations
  user        User      @relation(fields: [userId], references: [id])
  userId      Int

  client      Client?   @relation(fields: [clientId], references: [id])
  clientId    Int?
}